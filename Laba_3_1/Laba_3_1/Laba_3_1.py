import pickle
import os  # –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞

# üìå –ò–º—è —Ñ–∞–π–ª–∞
FILENAME = "data.pickle"

# üìå –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ª–æ–≤–∞—Ä—è –∏–∑ —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
def load_phones_from_file(filename):
    if os.path.exists(filename):
        with open(filename, "rb") as f:
            print(f"–ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –∏–∑ —Ñ–∞–π–ª–∞: {filename}")
            return pickle.load(f)
    else:
        print(f"–§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å.")
        return None

# üìå –ò—Å—Ö–æ–¥–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å (–µ—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç)
default_phones = {
    "iPhone 15": {
        "USA": 999, "UK": 1099, "Germany": 1050, "France": 1060,
        "Japan": 980, "India": 1200, "China": 990, "Canada": 1020
    },
    "Samsung Galaxy S23": {
        "USA": 950, "UK": 980, "Germany": 970, "France": 960,
        "Japan": 920, "India": 1100, "China": 940, "Canada": 960
    },
    "Google Pixel 8": {
        "USA": 800, "UK": 820, "Germany": 830, "France": 815,
        "Japan": 790, "India": 950, "China": 805, "Canada": 810
    },
    "Xiaomi 13": {
        "USA": 750, "UK": 780, "Germany": 760, "France": 770,
        "Japan": 730, "India": 880, "China": 740, "Canada": 760
    },
    "OnePlus 11": {
        "USA": 720, "UK": 750, "Germany": 730, "France": 740,
        "Japan": 710, "India": 850, "China": 720, "Canada": 730
    },
    "Huawei P60": {
        "USA": 680, "UK": 710, "Germany": 700, "France": 690,
        "Japan": 660, "India": 800, "China": 680, "Canada": 700
    },
    "Sony Xperia 5": {
        "USA": 790, "UK": 820, "Germany": 810, "France": 800,
        "Japan": 770, "India": 900, "China": 780, "Canada": 800
    }
}

# üìå –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ —Ñ–∞–π–ª–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
phones = load_phones_from_file(FILENAME)
if phones is None:
    phones = default_phones.copy()

# 1. –°—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
print("\n–°–ø–∏—Å–æ–∫ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏ –∏—Ö —Å—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:")
avg_prices = {}
for model, prices in phones.items():
    avg = sum(prices.values()) / len(prices)
    avg_prices[model] = avg
    print(f"{model}: {avg:.2f}")

# 2. –£–¥–∞–ª–µ–Ω–∏–µ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–Ω–µ–π —Ü–µ–Ω–æ–π
min_model = min(avg_prices, key=avg_prices.get)
print(f"\n–£–¥–∞–ª—è–µ–º –º–æ–¥–µ–ª—å —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–Ω–µ–π —Ü–µ–Ω–æ–π: {min_model}")
del phones[min_model]

# 3. –ú–æ–¥–µ–ª–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö —Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ >= 70% –æ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π
print("\n–¢–µ–ª–µ—Ñ–æ–Ω—ã —Å —Ü–µ–Ω–æ–π –º–µ–Ω–µ–µ —á–µ–º –Ω–∞ 30% –Ω–∏–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–Ω–µ–π:")
max_avg = max(avg_prices.values())
threshold = max_avg * 0.7
for model, avg in avg_prices.items():
    if avg >= threshold:
        print(f"{model}: {avg:.2f}")

# 4. –¶–µ–Ω–∞ –≤ –°–®–ê –≤—ã—à–µ, —á–µ–º –≤ UK
print("\n–¢–µ–ª–µ—Ñ–æ–Ω—ã, –≥–¥–µ —Ü–µ–Ω–∞ –≤ –°–®–ê > UK:")
for model, prices in phones.items():
    if prices["USA"] > prices["UK"]:
        print(model)

# 5. –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –≤ —Ñ–∞–π–ª
with open(FILENAME, "wb") as f:
    pickle.dump(phones, f)
print(f"\n–û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ —Ñ–∞–π–ª {FILENAME}")
